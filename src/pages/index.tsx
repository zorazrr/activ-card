import { signIn, signOut, useSession } from "next-auth/react";
import Head from "next/head";
import Link from "next/link";
import Image from "next/image";
import StyledButton from "~/components/Button";

import { api } from "~/utils/api";

export default function Home() {
  const hello = api.post.hello.useQuery({ text: "from tRPC" });

  return (
    <>
      <Head>
        <title>ActivCard</title>
        <meta name="description" content="Generated by create-t3-app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <div className="main-class flex items-center justify-between space-x-4">
        <div className="p-5">
          <Image src="/assets/logo.png" alt="header" width={65} height={65} />
        </div>
        <div className="main-class flex items-center justify-between space-x-4 p-5">
          <StyledButton label="Log In" colorInd={0} onClick={() => {}} />
          <StyledButton label="Sign Up" colorInd={1} onClick={() => {}} />
        </div>
      </div>
      <div
        className="main-class justify-content flex items-center"
        style={{
          width: "100%",
          paddingTop: "10%",
          paddingLeft: "15%",
          paddingRight: "15%",
        }}
      >
        <div
          className="main-class justify-content flex-col items-center"
          style={{ margin: "auto", paddingBottom: "30%" }}
        >
          <div className="h1 text-darkBlue" style={{ margin: "auto" }}>
            ActivCard
          </div>
          <div style={{ margin: "auto" }}>
            <StyledButton
              label="Get Started"
              colorInd={0}
              onClick={() => {}}
              style={{ width: "65%", height: "50px" }}
            />
          </div>
        </div>
        <div style={{ marginRight: "10%", marginBottom: "5%" }}>
          <Image
            src="/assets/big_logo.png" // Assume your image is in the public/images folder
            alt="Logo"
            width={550} // Desired width of the image in pixels
            height={330} // Desired height of the image in pixels
          />
        </div>
      </div>
      {/* <main className=" flex min-h-screen flex-col items-center justify-center bg-gradient-to-b from-[#2e026d] to-[#15162c]">
        <div className="container flex flex-col items-center justify-center gap-12 px-4 py-16 ">
          <h1 className="text-5xl font-extrabold tracking-tight text-white sm:text-[5rem]">
            Create <span className="text-[hsl(280,100%,70%)]">T3</span> App
          </h1>
          <div className="grid grid-cols-1 gap-4 sm:grid-cols-2 md:gap-8">
            <Link
              className="flex max-w-xs flex-col gap-4 rounded-xl bg-white/10 p-4 text-white hover:bg-white/20"
              href="https://create.t3.gg/en/usage/first-steps"
              target="_blank"
            >
              <h3 className="text-2xl font-bold">First Steps →</h3>
              <div className="text-lg">
                Just the basics - Everything you need to know to set up your
                database and authentication.
              </div>
              <div className="h1">
                hiiii
              </div>
              <div className="h2">
                hiiii
              </div>
              <div className="h3">
                hiiii
              </div>
              <div className="h4">
                hiiii
              </div>
              <div className="text">
                hiiii
              </div>
            </Link>
            <Link
              className="flex max-w-xs flex-col gap-4 rounded-xl bg-white/10 p-4 text-white hover:bg-white/20"
              href="https://create.t3.gg/en/introduction"
              target="_blank"
            >
              <h3 className="text-2xl font-bold">Documentation →</h3>
              <div className="text-lg">
                Learn more about Create T3 App, the libraries it uses, and how
                to deploy it.
              </div>
            </Link>
          </div>
          <div className="flex flex-col items-center gap-2">
            <p className="text-2xl text-white">
              {hello.data ? hello.data.greeting : "Loading tRPC query..."}
            </p>
            <AuthShowcase />
          </div>
        </div>
      </main> */}
    </>
  );
}

function AuthShowcase() {
  const { data: sessionData } = useSession();

  const { data: secretMessage } = api.post.getSecretMessage.useQuery(
    undefined, // no input
    { enabled: sessionData?.user !== undefined },
  );

  return (
    <div className="flex flex-col items-center justify-center gap-4">
      <p className="text-center text-2xl text-white">
        {sessionData && <span>Logged in as {sessionData.user?.name}</span>}
        {secretMessage && <span> - {secretMessage}</span>}
      </p>
      <button
        className="rounded-full bg-white/10 px-10 py-3 font-semibold text-white no-underline transition hover:bg-white/20"
        onClick={sessionData ? () => void signOut() : () => void signIn()}
      >
        {sessionData ? "Sign out" : "Sign in"}
      </button>
    </div>
  );
}
