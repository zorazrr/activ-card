// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mongodb"
  // NOTE: When using mysql or sqlserver, uncomment the @db.Text annotations in model Account below
  // Further reading:
  // https://next-auth.js.org/adapters/prisma#create-the-prisma-schema
  // https://www.prisma.io/docs/reference/api-reference/prisma-schema-reference#string
  url      = env("DATABASE_URL")
}

model Badge {
  id          String        @id @default(auto()) @map("_id") @db.ObjectId
  url         String
  student_id  String
  student     Student       @relation(fields: [student_id], references: [id])
  SetProgress SetProgress[]
}

model Card {
  id              String       @id @default(auto()) @map("_id") @db.ObjectId
  term            String
  definition      String
  set_id          String
  set             Set          @relation(fields: [set_id], references: [id])
  set_progress_id String?
  set_progress    SetProgress? @relation(fields: [set_progress_id], references: [id])
}

model SetProgress {
  id              String  @id @default(auto()) @map("_id") @db.ObjectId
  set_id          String
  set             Set     @relation(fields: [set_id], references: [id])
  student_id      String
  student         Student @relation(fields: [student_id], references: [id])
  completed_cards Card[]
  badge_id        String
  badge           Badge   @relation(fields: [badge_id], references: [id])
}

model Classroom {
  id       String    @id @default(auto()) @map("_id") @db.ObjectId
  name     String
  students Student[]
  teacher_id String
  teacher  Teacher@relation(fields: [teacher_id], references: [id])
  set      Set[]
}

model Student {
  id           String        @id @default(auto()) @map("_id") @db.ObjectId
  name         String
  classroom_id String
  classroom    Classroom     @relation(fields: [classroom_id], references: [id])
  set_progress SetProgress[]
  badge        Badge[]
}

model Teacher {
  id           String    @id @default(auto()) @map("_id") @db.ObjectId
  name         String
  classroom    Classroom[]
}

model Set {
  id           String        @id @default(auto()) @map("_id") @db.ObjectId
  name         String
  classroom_id String
  classroom    Classroom     @relation(fields: [classroom_id], references: [id])
  set_progress SetProgress[]
  cards        Card[]
  check_mode   CheckMode
  answer_mode  AnswerMode
  pomodoro     Boolean
}

enum CheckMode {
  AI_CHECK
  WORD_BY_WORD
}

enum AnswerMode {
  TYPING
  SPEAKING
}
